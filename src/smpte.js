!function (t, e) { "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.SMPTE = e() : t.SMPTE = e() }(window, function () { return function (t) { var e = {}; function r(n) { if (e[n]) return e[n].exports; var o = e[n] = { i: n, l: !1, exports: {} }; return t[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports } return r.m = t, r.c = e, r.d = function (t, e, n) { r.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: n }) }, r.r = function (t) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }) }, r.t = function (t, e) { if (1 & e && (t = r(t)), 8 & e) return t; if (4 & e && "object" == typeof t && t && t.__esModule) return t; var n = Object.create(null); if (r.r(n), Object.defineProperty(n, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t) for (var o in t) r.d(n, o, function (e) { return t[e] }.bind(null, o)); return n }, r.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return r.d(e, "a", e), e }, r.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, r.p = "/", r(r.s = 0) }([function (t, e, r) { t.exports = r(1) }, function (t, e, r) { "use strict"; function n(t) { if ("number" == typeof t) return t.toString().padStart(2, "0") } function o(t, e, r) { return e in t ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = r, t } r.r(e); var a = function t() { !function (t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") }(this, t) }; function i(t) { return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } function u(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } o(a, "FR_23_976", 24e3 / 1001), o(a, "FR_24", 24), o(a, "FR_25", 25), o(a, "FR_29_97", 3e4 / 1001), o(a, "FR_30", 30), o(a, "FR_50", 50), o(a, "FR_59_94", 6e4 / 1001), o(a, "FR_60", 60); var s = function () { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t.defaults.frameRate, o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t.defaults.dropFrame; if (function (t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") }(this, t), r !== a.FR_29_97 && o) throw new Error("Only 30000/10001 frame rate has drop frame support"); if (!t.isFramerateSupported(r)) throw new Error("Frame rate not supported"); if (this.attributes = { df: o, frameRate: r }, "number" != typeof e) { if (e instanceof Date) { var u = new Date(e.getTime()); return u.setHours(0, 0, 0, 0), e = (e - u) * this.attributes.frameRate, void (this.frameCount = Math.floor(e / 1e3)) } if ("object" === i(e)) { var s = o ? ";" : ":"; e = { hours: n(e.hours), minutes: n(e.minutes), seconds: n(e.seconds), frames: n(e.frames) }, e = Object.keys(e).reduce(function (t, r) { return t + "".concat(void 0 !== e[r] ? e[r] : "00").concat(s) }, "").slice(0, -1) } this.frameCount = t.frameCountFromTimecode(e, r, o) } else { if (e < 0) throw new Error("Negative frames not supported"); this.frameCount = Math.floor(e) } } var e, r, o; return e = t, (r = [{ key: "_updateFramecount", value: function () { this._frameCount = t.frameCountFromTimecode(this.toString(), this.attributes.frameRate, this.attributes.df) } }, { key: "addFromSeconds", value: function (e) { var r = t.fromSeconds(e, this.attributes.frameRate, this.attributes.df); return this.add(r) } }, { key: "subtractFromSeconds", value: function (e) { var r = t.fromSeconds(e, this.attributes.frameRate, this.attributes.df); return this.subtract(r) } }, { key: "add", value: function (e) { var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1; if (e instanceof t) { if (e.attributes.frameRate !== this.attributes.frameRate) throw new Error("Different frame rate timecodes can not be added") } else e = new t(e, this.attributes.frameRate, this.attributes.df); return this.frameCount += e.frameCount * Math.sign(r), this } }, { key: "subtract", value: function (t) { return 0 === this.frameCount ? this : this.add(t, -1) } }, { key: "dropFrame", value: function () { var t = this._frameCount, e = t % 17982; return e < 2 && (e += 2), t += 18 * Math.floor(t / 17982) + 2 * Math.floor((e - 2) / 1798) } }, { key: "toString", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0, r = this.attributes.df, o = t.isTimecodeFormatValid(e, r), a = r ? ";" : ":", i = e && o ? e.match(/:|;/g) : [a, a, a]; if (void 0 !== e && !o) throw new Error("Invalid timecode string"); return n(this.hours) + i[0] + n(this.minutes) + i[1] + n(this.seconds) + i[2] + n(this.frames) } }, { key: "toDate", value: function () { var t = this.frameCount / this.attributes.frameRate * 1e3, e = new Date; return e.setHours(0, 0, 0, 0), new Date(e.valueOf() + t) } }, { key: "frameCount", get: function () { return this._frameCount }, set: function (t) { this._frameCount = t; var e = this.attributes.df ? this.dropFrame() : this._frameCount, r = Math.round(this.attributes.frameRate); this._hours = Math.floor(e / (3600 * r)) % 24, this._minutes = Math.floor(e / (60 * r)) % 60, this._seconds = Math.floor(e / r) % 60, this._frames = e % r } }, { key: "hours", get: function () { return this._hours }, set: function (e) { this._hours = e, this._frameCount = t.frameCountFromTimecode(this.toString(), this.attributes.frameRate, this.attributes.df) } }, { key: "minutes", get: function () { return this._minutes }, set: function (t) { this._minutes = t, this._updateFramecount() } }, { key: "seconds", get: function () { return this._seconds }, set: function (t) { this._seconds = t, this._updateFramecount() } }, { key: "frames", get: function () { return this._frames }, set: function (t) { this._frames = t, this._updateFramecount() } }, { key: "durationInSeconds", get: function () { return this.frameCount / this.attributes.frameRate } }]) && u(e.prototype, r), o && u(e, o), t }(), f = { frameRate: a.FR_24, dropFrame: !1 }, d = Object.freeze([a.FR_23_976, a.FR_24, a.FR_25, a.FR_29_97, a.FR_30, a.FR_50, a.FR_59_94, a.FR_60]); function c(t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.defaults.frameRate, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : s.defaults.dropFrame; return new s(t, e, r) } s.fromTimecode = c, s.fromFrames = c, s.fromDate = c, s.fromSeconds = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.defaults.frameRate, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : s.defaults.dropFrame; if ("number" != typeof t) throw new Error("First argument must be a number"); if (!s.isFramerateSupported(e)) throw new Error("Frame rate not supported"); return new s(Math.trunc(t * e), e, r) }, s.fromParts = function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : s.defaults.frameRate, a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : s.defaults.dropFrame; return new s({ hours: t, minutes: e, seconds: r, frames: n }, o, a) }, s.isTimecodeFormatValid = function (t, e) { return "string" == typeof t && (!(!e && t.includes(";")) && ((!e || ";" === t[8]) && /^(?:[0-1][0-9]|2[0-3])(:|;)(?:[0-5][0-9])\1(?:[0-5][0-9])(:|;)(?:[0-2][0-9])$/.test(t))) }, s.isValidTimecode = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.defaults.frameRate, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : s.defaults.dropFrame; if (!s.isTimecodeFormatValid(t, r)) return !1; var n = t.split(/:|;/).map(function (t) { return parseInt(t) }); return !("number" == typeof e && n[3] >= Math.round(e)) && !(r && n[1] % 10 != 0 && n[3] < 2 && 0 === n[2]) }, s.frameCountFromTimecode = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s.defaults.frameRate, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : s.defaults.dropFrame; if (!s.isValidTimecode(t, e, r)) throw new Error("Invalid timecode"); var n = t.split(/:|;/).map(function (t) { return parseInt(t) }), o = Math.round(e), a = 60 * o * 60 * n[0] + 60 * o * n[1] + o * n[2] + n[3]; if (r) { var i = 60 * n[0] + n[1]; return a - 2 * (i - Math.floor(i / 10)) } return a }, s.consts = Object.assign({}, a), s.defaults = f, s.supportedFrameRates = d, s.isFramerateSupported = function (t) { return s.supportedFrameRates.includes(t) }; e.default = s }]).default });